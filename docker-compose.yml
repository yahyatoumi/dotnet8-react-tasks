services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:16.3
    container_name: db
    environment:
      POSTGRES_USER: "yahya"
      POSTGRES_PASSWORD: "yahyaPASSWORD"
      POSTGRES_DB: "yahya_db"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # .NET 8 Backend Service
  backend:
    container_nasme: dotnet
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    volumes:
      - ./server:/app
      - /app/bin
      - /app/obj
    networks:
      - app-network
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  # Next.js Frontend Service
  frontend:
    container_name: next
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - app-network
    env_file:
      - .env
    restart: always

  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  node_modules:
